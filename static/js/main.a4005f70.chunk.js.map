{"version":3,"sources":["components/Pixel/Pixel.jsx","components/Display/Display.jsx","hooks/useWindowsSize.js","components/ColorBox/ColorBox.jsx","components/ColorPicker/ColorPicker.jsx","components/Fade/Fade.jsx","App.jsx","index.js"],"names":["Pixel","props","currentColor","holdingClick","useState","pixelColor","setPixelColor","painted","setPainted","stylePixel","backgroundColor","applyColor","boolean","className","style","onClick","onMouseMove","Display","setAnchorPoint","setOpenColorPicker","setHoldingClick","area","size","setSize","useLayoutEffect","updateSize","window","innerWidth","innerHeight","addEventListener","removeEventListener","width","height","pixelSize","Math","floor","useWindowSize","cells","Array","from","length","id","onMouseDown","onMouseUp","onContextMenu","event","x","clientX","y","clientY","map","cell","index","ColorBox","setCurrentColor","selectColor","target","ColorPicker","onMouseLeave","color","colorStyle","Fade","show","children","shouldRender","setRender","useEffect","animation","onAnimationEnd","App","openColorPicker","anchorPoint","preventDefault","top","left","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a4005f70.chunk.js","sourcesContent":["import './Pixel.css';\r\nimport { useState } from 'react';\r\n\r\nconst Pixel = (props) => {\r\n  \r\n  const {currentColor, holdingClick} = props;\r\n  const [pixelColor, setPixelColor] = useState('#FFFFFF');\r\n  const [painted, setPainted] = useState(false);\r\n  \r\n  const stylePixel = {\r\n    backgroundColor : pixelColor\r\n  }\r\n  \r\n  const applyColor = (boolean) => {\r\n   \r\n    setPainted(boolean)\r\n    setPixelColor(currentColor)    \r\n  }\r\n\r\n  return (\r\n    <div \r\n      className='pixel'\r\n      style={painted ? stylePixel : null}\r\n      onClick={() => applyColor(!painted)}\r\n      onMouseMove={(holdingClick ? () => applyColor(true) : null)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Pixel;","\r\nimport './Display.css';\r\nimport { useState } from 'react';\r\nimport useWindowSize from '../../hooks/useWindowsSize.js';\r\nimport Pixel from '../Pixel/Pixel';\r\n\r\nconst Display = (props) => {\r\n\r\n  const {currentColor, setAnchorPoint, setOpenColorPicker} = props;\r\n  const [holdingClick, setHoldingClick] = useState(false);\r\n  const area = useWindowSize(); \r\n  const cells = Array.from({ length: area});\r\n\r\n  const handleContexMenu = (event) => {\r\n    \r\n    setOpenColorPicker(true)\r\n    setAnchorPoint({ x: event.clientX, y: event.clientY });\r\n  }\r\n  \r\n  \r\n  return (\r\n    <div \r\n      id='display'  \r\n      onMouseDown={() => setHoldingClick(true)} \r\n      onMouseUp={()=> setHoldingClick(false)}\r\n      onContextMenu={handleContexMenu}  \r\n    >\r\n\r\n      {cells\r\n        .map((cell, index) => \r\n          <Pixel \r\n            key={index} \r\n            currentColor={currentColor}\r\n            holdingClick={holdingClick} \r\n          />\r\n        )\r\n      }\r\n      \r\n    </div>\r\n  ); \r\n};\r\n\r\nexport default Display;","import { useState, useLayoutEffect } from \"react\";\r\n\r\nexport default function useWindowSize() {\r\n  \r\n  const [size, setSize] = useState([0, 0]);\r\n  \r\n  useLayoutEffect(() => {\r\n    function updateSize() {\r\n      setSize([window.innerWidth, window.innerHeight]);\r\n    }\r\n    window.addEventListener('resize', updateSize);\r\n    updateSize();\r\n    return () => window.removeEventListener('resize', updateSize);\r\n  }, []);\r\n\r\n  const [width, height] = size;\r\n  const pixelSize = width / 100;\r\n  const rows = Math.floor( height / pixelSize );\r\n  return rows * 100;\r\n}","import './ColorBox.css';\r\n\r\nconst ColorBox = (props) => {\r\n   \r\n  const {id, style, setCurrentColor, setOpenColorPicker} = props;\r\n\r\n  const selectColor = (id) => {\r\n  \r\n    switch (id) {\r\n      case \"box-0\":\r\n        setCurrentColor('#000000');\r\n        setOpenColorPicker(false);\r\n        break;\r\n      case \"box-1\":\r\n        setCurrentColor('#FF00FF');\r\n        setOpenColorPicker(false);\r\n      break;\r\n      case \"box-2\": \r\n        setCurrentColor('#FF7578');\r\n        setOpenColorPicker(false);\r\n      break;\r\n      case \"box-3\":\r\n        setCurrentColor('#876FFF');\r\n        setOpenColorPicker(false);\r\n      break;\r\n      case \"box-4\":\r\n        setCurrentColor('#FCFF6A');\r\n        setOpenColorPicker(false);\r\n      break;\r\n      case \"box-5\":\r\n        setCurrentColor('#4AFFFF');\r\n        setOpenColorPicker(false);\r\n      break;\r\n      default:\r\n      return;\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <div\r\n      className=\"color-box\" \r\n      id={id} \r\n      style={style}\r\n      onClick={(event) => selectColor(event.target.id)}\r\n    />\r\n  )\r\n};\r\n\r\nexport default ColorBox;","import './ColorPicker.css';\r\nimport ColorBox from '../ColorBox/ColorBox';\r\n\r\nconst ColorPicker = (props) => {\r\n  \r\n  const {setOpenColorPicker, setCurrentColor, style} = props; \r\n  const colorsArray = ['#000000', '#FF00FF', '#FF7578', '#876FFF', '#FCFF6A', '#4AFFFF'];\r\n\r\n  return(\r\n    \r\n    <div id='color-picker' style={style} onMouseLeave={()=>setOpenColorPicker(false)}>\r\n\r\n      { colorsArray\r\n        .map((color, index) => {\r\n        \r\n          const colorStyle = { backgroundColor: color }\r\n                  \r\n          return (\r\n            <ColorBox \r\n              key={index} \r\n              id={`box-${index}`} \r\n              style={colorStyle} \r\n              setCurrentColor={setCurrentColor}\r\n              setOpenColorPicker={setOpenColorPicker}\r\n            />\r\n          )\r\n        })\r\n      } \r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ColorPicker;","import React, { useEffect, useState } from 'react';\r\n\r\nconst Fade = ({ show, children }) => {\r\n  const [shouldRender, setRender] = useState(show);\r\n\r\n  useEffect(() => {\r\n    if (show) setRender(true);\r\n  }, [show]);\r\n\r\n  const onAnimationEnd = () => {\r\n    if (!show) setRender(false);\r\n  };\r\n\r\n  return (\r\n    shouldRender && (\r\n      <div\r\n        style={{ animation: `${show ? 'fadeIn' : \"fadeOut\"} 1s` }}\r\n        onAnimationEnd={onAnimationEnd}\r\n      >\r\n        {children}\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Fade;","import './App.css';\nimport { useState } from 'react';\nimport Display from './components/Display/Display';\nimport ColorPicker from './components/ColorPicker/ColorPicker';\nimport Fade from './components/Fade/Fade';\n\nconst App = () => { \n\n  const [currentColor, setCurrentColor] = useState('#000000');\n  const [openColorPicker, setOpenColorPicker] = useState(false);\n  const [anchorPoint, setAnchorPoint] = useState({ x: 0, y: 0 });\n  \n  return (\n\n    <div className='app' onContextMenu={(event) => event.preventDefault()}>\n\n      <Display \n        currentColor={currentColor} \n        setOpenColorPicker={setOpenColorPicker} \n        setAnchorPoint={setAnchorPoint}\n      />\n\n      <Fade show={openColorPicker}>\n        <ColorPicker \n          style={{top: anchorPoint.y, left: anchorPoint.x}}\n          currentColor={currentColor} \n          setCurrentColor={setCurrentColor} \n          setOpenColorPicker={setOpenColorPicker} \n        /> \n      </Fade>\n      \n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App.jsx'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n"],"sourceRoot":""}